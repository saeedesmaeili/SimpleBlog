@using Blog.Models
@model IEnumerable<Category>
@{
    var firstLevel = Model.Where(x => x.ParentId == Guid.Empty).ToList();
}

<div class="uk-text-center">
    <a href="@Url.Action("Rss","Categories")" class="uk-icon-rss" style="font-size:90px;"></a>
</div>
<hr class="uk-grid-divider" />
@if (User.IsInRole("Admin"))
{
    <a href="@Url.Action("Index","Categories")" class="uk-button uk-button-primary uk-margin-bottom uk-width-1-1 uk-text-left"><i class="uk-icon-cogs uk-margin-small-right"></i>مدیریت شاخه ها</a>
}
<ul class="tm-nav uk-nav uk-nav-parent-icon uk-nav-side" data-uk-nav="{}">
    @helper RecurseSomething(Category item)
        {
if (Model.Any(x => x.ParentId == item.Id))
{
        <li class="uk-parent @(ViewBag.SelectedCategoryParentId == item.Id ? "uk-active" : "") ">
            @if (item.ParentId == Guid.Empty)
            {
                <a href="#"><i class="@item.IconClass uk-margin-small-right"></i>@item.Name</a>
            }
            else
            {
                <a href="@Url.Action("ShowByCategory", "BlogPosts", new { id = item.Id ,name = item.Name.Replace(" ","-")})">
                    <i class="@item.IconClass uk-margin-small-right"></i>@item.Name
                </a>
            }
            <ul class="uk-nav-sub">
                @foreach (var subData in Model.Where(x => x.ParentId == item.Id).ToList())
                {
                    @RecurseSomething(subData);
                }
            </ul>
        </li>
}
else
{
        <li class="tm-blogcategoryitem @(ViewBag.SelectedCategoryId == item.Id ? "uk-active tm-blogcategoryitem-selected":"")">
            <a href="@Url.Action("ShowByCategory", "BlogPosts", new { id = item.Id, name = item.Name.Replace(" ", "-") })">
                <i class="@item.IconClass uk-margin-small-right"></i>@item.Name
            </a>
        </li>
}
}
    @foreach (var item in firstLevel)
    {
        @RecurseSomething(item)
    }
</ul>

