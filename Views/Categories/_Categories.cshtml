@using Blog.Models
@model IEnumerable<Category>
@{
    var firstLevel = Model.Where(x => x.ParentId == Guid.Empty).ToList();
}

@helper RecurseSomething(Category item)
{
    if (Model.Any(x => x.ParentId == item.Id))
    {
        <li class="uk-parent @(ViewBag.SelectedCategoryParentId == item.Id || Model.Where(x=>x.ParentId == item.Id).Any(x => x.Id == ViewBag.SelectedCategoryParentId) ? "uk-active" : "") ">
            @if (item.ParentId == Guid.Empty)
            {
                <a href="#"><i class="@item.IconClass uk-margin-small-right"></i>@item.Name</a>
            }
            else
            {
                <a href="@Url.Action("ShowByCategory", "BlogPosts", new { id = item.Id ,name = item.Name.Replace(" ","-")})" class="@(ViewBag.SelectedCategoryId == item.Id ? "tm-blogcategoryitem-selected":"")">
                    <i class="@item.IconClass uk-margin-small-right"></i>@item.Name
                </a>
            }
            <ul class="uk-nav-sub">
                @foreach (var subCategories in Model.Where(x => x.ParentId == item.Id).ToList())
                {
                    @RecurseSomething(subCategories);
                }
            </ul>
        </li>
    }
    else
    {
        <li class="tm-blogcategoryitem @(ViewBag.SelectedCategoryId == item.Id ? "uk-active tm-blogcategoryitem-selected":"")">
            <a href="@Url.Action("ShowByCategory", "BlogPosts", new { id = item.Id, name = item.Name.Replace(" ", "-") })" class="@(ViewBag.SelectedCategoryId == item.Id ? "tm-blogcategoryitem-selected":"")">
                <i class="@item.IconClass uk-margin-small-right"></i>@item.Name
            </a>
        </li>
    }
}
@foreach (var item in firstLevel)
{
    @RecurseSomething(item)
}

